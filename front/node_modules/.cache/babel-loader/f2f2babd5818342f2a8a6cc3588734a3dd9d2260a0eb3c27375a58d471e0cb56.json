{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\dbp\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n/* e2b225c8d29b4f789e3e api 키*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [testData, setTestData] = useState();\n  const getApi = async () => {\n    axios.get(\"/api\").then(res => console.log(res.data));\n  };\n  const getTestdb = async () => {\n    axios.get(\"/testdb\").then(res => {\n      console.log(res.data);\n      setTestData(res.data);\n    });\n  };\n  useEffect(() => {\n    // OpenAPI에서 데이터 가져오기\n\n    // http://openapi.foodsafetykorea.go.kr/api/sample/COOKRCP01/xml/1/5/RCP_NM=값 &RCP_PARTS_DTLS=값 &CHNG_DT=값 &RCP_PAT2=값\n    /* e2b225c8d29b4f789e3e api 키*/\n    const apiUrl = \"http://openapi.foodsafetykorea.go.kr/api/e2b225c8d29b4f789e3e/COOKRCP01/json/1/5\";\n    async function fetchData() {\n      try {\n        console.log(\"데이터 받아오는중\");\n        const response = await axios.get(apiUrl);\n\n        // 여기서 데이터를 사용하거나 반환합니다.\n\n        const data = response.data;\n        console.log(data.COOKRCP01.row.length + \"개의 데이터\");\n      } catch (error) {\n        // 에러 처리\n        console.error(\"Error fetching data:\", error.message);\n      }\n    }\n    getApi();\n    getTestdb();\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(testData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"get food table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jDmyzgCh6xRi6vv9VC/TrX9F88A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","axios","useEffect","useState","jsxDEV","_jsxDEV","App","_s","testData","setTestData","getApi","get","then","res","console","log","data","getTestdb","apiUrl","fetchData","response","COOKRCP01","row","length","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Documents/dbp/front/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n/* e2b225c8d29b4f789e3e api 키*/\nfunction App() {\n  const [testData, setTestData] = useState();\n  const getApi = async () => {\n    axios.get(\"/api\").then((res) => console.log(res.data));\n  };\n  const getTestdb = async () => {\n    axios.get(\"/testdb\").then((res) => {\n      console.log(res.data);\n      setTestData(res.data);\n    });\n  };\n  useEffect(() => {\n    // OpenAPI에서 데이터 가져오기\n\n    // http://openapi.foodsafetykorea.go.kr/api/sample/COOKRCP01/xml/1/5/RCP_NM=값 &RCP_PARTS_DTLS=값 &CHNG_DT=값 &RCP_PAT2=값\n    /* e2b225c8d29b4f789e3e api 키*/\n    const apiUrl =\n      \"http://openapi.foodsafetykorea.go.kr/api/e2b225c8d29b4f789e3e/COOKRCP01/json/1/5\";\n    async function fetchData() {\n      try {\n        console.log(\"데이터 받아오는중\");\n        const response = await axios.get(apiUrl);\n\n        // 여기서 데이터를 사용하거나 반환합니다.\n\n        const data = response.data;\n        console.log(data.COOKRCP01.row.length + \"개의 데이터\");\n      } catch (error) {\n        // 에러 처리\n        console.error(\"Error fetching data:\", error.message);\n      }\n    }\n\n    getApi();\n    getTestdb();\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div>hi</div>\n      <div>{JSON.stringify(testData)}</div>\n      <button>get food table</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC1C,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzBT,KAAK,CAACU,GAAG,CAAC,MAAM,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC;EACxD,CAAC;EACD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BhB,KAAK,CAACU,GAAG,CAAC,SAAS,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACjCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBP,WAAW,CAACI,GAAG,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC;EACDd,SAAS,CAAC,MAAM;IACd;;IAEA;IACA;IACA,MAAMgB,MAAM,GACV,kFAAkF;IACpF,eAAeC,SAASA,CAAA,EAAG;MACzB,IAAI;QACFL,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,MAAMK,QAAQ,GAAG,MAAMnB,KAAK,CAACU,GAAG,CAACO,MAAM,CAAC;;QAExC;;QAEA,MAAMF,IAAI,GAAGI,QAAQ,CAACJ,IAAI;QAC1BF,OAAO,CAACC,GAAG,CAACC,IAAI,CAACK,SAAS,CAACC,GAAG,CAACC,MAAM,GAAG,QAAQ,CAAC;MACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAV,OAAO,CAACU,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACtD;IACF;IAEAf,MAAM,CAAC,CAAC;IACRO,SAAS,CAAC,CAAC;IACXE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACbzB,OAAA;MAAAqB,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACxB,QAAQ;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrCzB,OAAA;MAAAqB,QAAA,EAAQ;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;AAACvB,EAAA,CA7CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}