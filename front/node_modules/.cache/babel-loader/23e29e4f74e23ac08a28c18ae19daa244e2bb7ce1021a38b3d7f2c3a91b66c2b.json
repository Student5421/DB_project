{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\dbp\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n/* e2b225c8d29b4f789e3e api 키*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [testData, setTestData] = useState();\n  const getApi = async () => {\n    axios.get(\"/api\").then(res => console.log(res.data));\n  };\n  const getTestdb = async () => {\n    axios.get(\"/testdb\").then(res => {\n      console.log(res.data);\n      setTestData(res.data);\n    });\n  };\n  useEffect(() => {\n    // OpenAPI에서 데이터 가져오기\n\n    // http://openapi.foodsafetykorea.go.kr/api/sample/COOKRCP01/xml/1/5/RCP_NM=값 &RCP_PARTS_DTLS=값 &CHNG_DT=값 &RCP_PAT2=값\n    /* e2b225c8d29b4f789e3e api 키*/\n    const apiUrl = \"http://openapi.foodsafetykorea.go.kr/api/e2b225c8d29b4f789e3e/COOKRCP01/json/1/5\";\n    async function fetchData() {\n      try {\n        console.log(\"데이터 받아오는중\");\n        const response = await axios.get(apiUrl);\n\n        // 여기서 데이터를 사용하거나 반환합니다.\n\n        const data = response.data;\n        setApiData(data.COOKRCP01.row);\n        setData(data.COOKRCP01.row);\n        console.log(data.COOKRCP01.row);\n        console.log(data.COOKRCP01.row.length + \"개의 데이터\");\n      } catch (error) {\n        // 에러 처리\n        console.error(\"Error fetching data:\", error.message);\n      }\n    }\n    getApi();\n    getTestdb();\n    fetchData();\n  }, []);\n  const [apiData, setApiData] = useState();\n  const [dataFromServer, setDataFromServer] = useState();\n  const [data, setData] = useState();\n  const setFoodTable = async () => {\n    try {\n      // POST 요청을 보낼 때는 axios.post를 사용합니다.\n      await axios.post(\"/testdb/postDataFood\", apiData);\n      // 서버로부터 받은 데이터를 상태에 설정\n    } catch (error) {\n      console.error(\"에러 발생:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(testData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(apiData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setFoodTable,\n      children: \"get food table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K+cIn7QYQ53HoG7Bmd8UUm5y9cs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","axios","useEffect","useState","jsxDEV","_jsxDEV","App","_s","testData","setTestData","getApi","get","then","res","console","log","data","getTestdb","apiUrl","fetchData","response","setApiData","COOKRCP01","row","setData","length","error","message","apiData","dataFromServer","setDataFromServer","setFoodTable","post","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","onClick","_c","$RefreshReg$"],"sources":["C:/Documents/dbp/front/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n/* e2b225c8d29b4f789e3e api 키*/\n\nfunction App() {\n  const [testData, setTestData] = useState();\n  const getApi = async () => {\n    axios.get(\"/api\").then((res) => console.log(res.data));\n  };\n  const getTestdb = async () => {\n    axios.get(\"/testdb\").then((res) => {\n      console.log(res.data);\n      setTestData(res.data);\n    });\n  };\n  useEffect(() => {\n    // OpenAPI에서 데이터 가져오기\n\n    // http://openapi.foodsafetykorea.go.kr/api/sample/COOKRCP01/xml/1/5/RCP_NM=값 &RCP_PARTS_DTLS=값 &CHNG_DT=값 &RCP_PAT2=값\n    /* e2b225c8d29b4f789e3e api 키*/\n    const apiUrl =\n      \"http://openapi.foodsafetykorea.go.kr/api/e2b225c8d29b4f789e3e/COOKRCP01/json/1/5\";\n    async function fetchData() {\n      try {\n        console.log(\"데이터 받아오는중\");\n        const response = await axios.get(apiUrl);\n\n        // 여기서 데이터를 사용하거나 반환합니다.\n\n        const data = response.data;\n        setApiData(data.COOKRCP01.row);\n        setData(data.COOKRCP01.row);\n        console.log(data.COOKRCP01.row);\n        console.log(data.COOKRCP01.row.length + \"개의 데이터\");\n      } catch (error) {\n        // 에러 처리\n        console.error(\"Error fetching data:\", error.message);\n      }\n    }\n\n    getApi();\n    getTestdb();\n    fetchData();\n  }, []);\n\n  const [apiData, setApiData] = useState();\n  const [dataFromServer, setDataFromServer] = useState();\n  const [data, setData] = useState();\n  const setFoodTable = async () => {\n    try {\n      // POST 요청을 보낼 때는 axios.post를 사용합니다.\n      await axios.post(\"/testdb/postDataFood\", apiData);\n      // 서버로부터 받은 데이터를 상태에 설정\n    } catch (error) {\n      console.error(\"에러 발생:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <div>hi</div>\n      <div>{JSON.stringify(testData)}</div>\n      <div>{JSON.stringify(apiData)}</div>\n      <button onClick={setFoodTable}>get food table</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC1C,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzBT,KAAK,CAACU,GAAG,CAAC,MAAM,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC;EACxD,CAAC;EACD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BhB,KAAK,CAACU,GAAG,CAAC,SAAS,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACjCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBP,WAAW,CAACI,GAAG,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC;EACDd,SAAS,CAAC,MAAM;IACd;;IAEA;IACA;IACA,MAAMgB,MAAM,GACV,kFAAkF;IACpF,eAAeC,SAASA,CAAA,EAAG;MACzB,IAAI;QACFL,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,MAAMK,QAAQ,GAAG,MAAMnB,KAAK,CAACU,GAAG,CAACO,MAAM,CAAC;;QAExC;;QAEA,MAAMF,IAAI,GAAGI,QAAQ,CAACJ,IAAI;QAC1BK,UAAU,CAACL,IAAI,CAACM,SAAS,CAACC,GAAG,CAAC;QAC9BC,OAAO,CAACR,IAAI,CAACM,SAAS,CAACC,GAAG,CAAC;QAC3BT,OAAO,CAACC,GAAG,CAACC,IAAI,CAACM,SAAS,CAACC,GAAG,CAAC;QAC/BT,OAAO,CAACC,GAAG,CAACC,IAAI,CAACM,SAAS,CAACC,GAAG,CAACE,MAAM,GAAG,QAAQ,CAAC;MACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACtD;IACF;IAEAjB,MAAM,CAAC,CAAC;IACRO,SAAS,CAAC,CAAC;IACXE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACS,OAAO,EAAEP,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EACxC,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,CAAC;EACtD,MAAM,CAACa,IAAI,EAAEQ,OAAO,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EAClC,MAAM4B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,sBAAsB,EAAEJ,OAAO,CAAC;MACjD;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACErB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACbhC,OAAA;MAAA4B,QAAA,EAAMK,IAAI,CAACC,SAAS,CAAC/B,QAAQ;IAAC;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrChC,OAAA;MAAA4B,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACX,OAAO;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpChC,OAAA;MAAQmC,OAAO,EAAET,YAAa;MAAAE,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAAC9B,EAAA,CA9DQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}